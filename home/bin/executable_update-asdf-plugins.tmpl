{{ if .asdf.enabled -}}
#!/bin/bash
# Original source: https://gist.github.com/developer-guy/4de4e2ff2eaa31633a0fef719c92eada

function update() {
  asdf update
  for i in $(asdf plugin list); do
    asdf plugin update "$i"
    CURRENT_VERSION=$(asdf current "$i" | awk '{print $2}')
    LATEST_VERSION=$(asdf latest "$i")
    if [[ $(semver_check "$LATEST_VERSION" "$CURRENT_VERSION") -lt 0 ]]; then
      case "$i" in
      python) CONFIGURE_OPTS=--enable-optimizations asdf install "$i" "$LATEST_VERSION" ;;
      ruby) CONFIGURE_OPTS="--without-tcl --without-tk" asdf install "$i" "$LATEST_VERSION" ;;
      rust) RUST_WITHOUT=rust-docs,rust-other-component asdf install "$i" "$LATEST_VERSION" ;;
      postgres) POSTGRES_EXTRA_CONFIGURE_OPTIONS=--with-uuid=e2fs asdf install "$i" "$LATEST_VERSION" ;; 
      lua) asdf install "$i" "5.1.5" ;;
      neovim) asdf uninstall neovim nightly; asdf install neovim nightly ;;
      *) asdf install "$i" "$LATEST_VERSION" ;;
      esac
      asdf global "$i" "$LATEST_VERSION"
    else
      echo "âœ“ $i ($CURRENT_VERSION)"
    fi
    if [[ ! -v GITHUB_TOKEN ]]; then
      echo "No GITHUB_TOKEN, sleeping for 5 seconds..."
      sleep 5
    fi
  done
}

function semver_check() {
  local newest
  newest=$(echo -e "$1\n$2" | sort -V | tail -1)
  [[ "$1" != "$2" && "$1" != "$newest" ]] && echo -1 && return
  [[ "$1" == "$2" ]]
  echo $?
}

function main() {
  update
}

main
{{ end -}}
