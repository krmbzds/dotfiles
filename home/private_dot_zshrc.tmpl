# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files source by it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Automaticaly wrap TTY with a transparent tmux ('integrated'), or start a
# full-fledged tmux ('system'), or disable features that require tmux ('no').
if [[ -n "$SSH_CONNECTION" ]]; then
  zstyle ':z4h:' start-tmux       'no'
else
  zstyle ':z4h:' start-tmux       'system'
fi

# Move prompt to the bottom when zsh starts up so that it's always in the
# same position. Has no effect if start-tmux is 'no'.
zstyle ':z4h:' prompt-at-bottom 'yes'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  '{{ if (eq .chezmoi.os "darwin") }}mac{{ else }}pc{{ end }}'

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration '{{ if (eq .chezmoi.os "darwin") }}yes{{ else }}no{{ end }}'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'partial-accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'yes'

{{ if .prefs.dracula_pro -}}
# Customize fzf theme
zstyle ':z4h:*' fzf-flags --color='fg:-1,bg:-1,hl:#99ffee,fg+:#ffffff,bg+:#2e2b3b,hl+:#ff99cc,info:#7970a9,prompt:#8aff80,pointer:#ff99cc,marker:#ff80bf,spinner:#80ffea,header:#aa99ff'
{{- end }}

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# ssh when connecting to these hosts.
zstyle ':z4h:ssh:raspberrypi.local'   enable 'yes'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'

# Send these files over to the remote host when connecting over ssh to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.config/zsh/aliases.zsh' '~/.env.zsh'

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`.
z4h install romkatv/archive || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Export environment variables.
export GPG_TTY=$TTY
export FINGERPRINT='{{ .gpg.fingerprint }}'
export DO_NOT_TRACK=1
export TIME_STYLE=long-iso

# Set editor for local and remote environments.
if [[ -n "$SSH_CONNECTION" ]]; then
  export EDITOR='vi'
  export VISUAL='vi'
else
  export EDITOR='{{ .prefs.editor }}'
  export VISUAL='{{ .prefs.visual }}'
fi

# Extend PATH.
path=(~/bin $path)

# Use additional Git repositories pulled in with `z4h install`.
fpath+=($Z4H/romkatv/archive)
autoload -Uz archive lsarchive unarchive edit-command-line
zle -N edit-command-line

# Source additional local files if they exist.
z4h source ~/.env.zsh
{{ if .asdf.enabled -}}
z4h source ~/.asdf/asdf.sh
{{- end }}
{{ if .prefs.dracula_pro -}}
z4h source ~/.config/zsh/syntax-theme.sh
{{- end }}
{{ if .dependencies.broot -}}
z4h source ~/.config/broot/launcher/bash/br
{{- end }}

# Define key bindings.
z4h bindkey z4h-backward-kill-word  Ctrl+Backspace Ctrl+H
z4h bindkey z4h-backward-kill-zword Ctrl+Alt+Backspace

# Autoload functions.
autoload -Uz zmv
autoload -U +X bashcompinit && bashcompinit  # bash autocompletion in zsh

# Define aliases.
z4h source ~/.config/zsh/aliases.zsh

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu

# Use gpg-agent instead of ssh-agent
if ! [[ -n "$SSH_CONNECTION" ]]; then
  gpg-connect-agent updatestartuptty /bye >/dev/null
  if [ -z "$SSH_AUTH_SOCK" ]; then
    export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
  fi
fi
