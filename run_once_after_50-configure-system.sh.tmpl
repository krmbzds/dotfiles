{{- if (and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.name "Pop!_OS")) -}}
#!/bin/bash

set -e

# ****************************************************************************
# *                             Config Functions                             *
# ****************************************************************************

function install_and_configure_tpm() {
  . {{ .chezmoi.homeDir }}/.asdf/asdf.sh && asdf reshim tmux
  if [ ! -d "{{ .chezmoi.homeDir }}/.local/share/tmux/plugins/tpm" ]; then
    git clone https://github.com/tmux-plugins/tpm {{ .chezmoi.homeDir -}}/.local/share/tmux/plugins/tpm
    TMUX_PLUGIN_MANAGER_PATH="{{ .chezmoi.homeDir -}}/.local/share/tmux/plugins/tpm" {{ .chezmoi.homeDir -}}/.local/share/tmux/plugins/tpm/scripts/install_plugins.sh || rm -rf {{ .chezmoi.homeDir -}}/.local/share/tmux/plugins/tpm
  fi
}

function rebuild_bat_cache() {
  {{ if lookPath "batcat" }}
  batcat cache --build
  {{ else if lookPath "bat" }}
  bat cache --build
  {{ else }}
  true
  {{ end }}
}

# ****************************************************************************
# *                                    UI                                    *
# ****************************************************************************

function download_dracula_theme() {
  {{ if .gnome.dracula }}
  local dracula_folder="{{ .chezmoi.homeDir -}}/.config/dracula"
  local dracula_url="https://github.com/dracula/dracula-theme"
  if [ ! -d "$dracula_folder" ] ; then
      git clone $dracula_url $dracula_folder
  else
      git -C $dracula_folder pull
  fi
  git -C $dracula_folder submodule update --init themes/gtk

  mkdir -p "{{ .chezmoi.homeDir }}/.local/share/backgrounds/dracula"
  wget "https://raw.githubusercontent.com/dracula/wallpaper/master/first-collection/pop.png" -O "{{ .chezmoi.homeDir }}/.local/share/backgrounds/dracula/pop.png"
  gsettings set org.gnome.desktop.background picture-uri-dark "file://{{- .chezmoi.homeDir -}}/.local/share/backgrounds/dracula/pop.png"
  {{ else }}
  true
  {{ end }}
}

function download_dracula_pro_theme() {
  {{ if .prefs.dracula_pro }}
  local dracula_pro_folder="{{ .chezmoi.homeDir -}}/.config/dracula-pro"
  local dracula_pro_url="{{ .prefs.dracula_pro_url }}"
  if [ ! -d "$dracula_pro_folder" ] ; then
      git clone $dracula_pro_url $dracula_pro_folder
  else
      git -C $dracula_pro_folder pull
  fi
  {{ else }}
  true
  {{ end }}
}

function install_gnome_user_themes_extension() {
  {{ if .gnome.dracula }}
  local gnome_shell_version_major
  gnome_shell_version_major=$(gnome-shell --version 2>/dev/null | awk '{print $NF}' | cut -d. -f1)
  {{ .chezmoi.homeDir -}}/bin/gnome-shell-extension-installer 19 --yes --gnome-version "$gnome_shell_version_major"
  {{ else }}
  true
  {{ end }}
}

function enable_gnome_user_themes_extension() {
  {{ if .gnome.dracula }} gnome-extensions enable user-theme@gnome-shell-extensions.gcampax.github.com {{ else }} true {{ end }}
}

function set_user_theme_to_dracula() {
  {{ if .gnome.dracula }}
  gsettings set org.gnome.desktop.interface gtk-theme "Dracula-dark"
  gsettings set org.gnome.desktop.wm.preferences theme "Dracula-dark"
  gsettings --schemadir {{ .chezmoi.homeDir -}}/.local/share/gnome-shell/extensions/user-theme@gnome-shell-extensions.gcampax.github.com/schemas set org.gnome.shell.extensions.user-theme name "Dracula-dark"
  gsettings set org.gnome.shell.extensions.pop-shell hint-color-rgba "#9580FF"
  {{ else }}
  true
  {{ end }}
}

function restart_gnome_shell() {
  {{ if .gnome.dracula }}
  killall -HUP gnome-shell
  echo "(sleep 3) Restarting GNOME Shell ..."
  sleep 3
  {{ else }}
  true
  {{ end }}
}

function configure_static_workspaces() {
  {{ if .gnome.static_workspaces }}
    gsettings set org.gnome.mutter dynamic-workspaces false
    gsettings set org.gnome.desktop.wm.preferences num-workspaces "$1"

    for i in $(seq "$1"); do
      gsettings set org.gnome.shell.keybindings switch-to-application-"$i"  "[]"
      gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-"$i"  "['<Super>$i']"
      gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-"$i"  "['<Super><Shift>$i']"
    done
  {{ else }}
    true
  {{ end }}
}

function set_logout_confirmation_prompt() {
  gsettings set org.gnome.SessionManager logout-prompt "$1"
}

function configure_gnome() {
  gsettings set org.gnome.desktop.interface enable-animations {{ .gnome.enable_animations }}
  gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll {{ .gnome.natural_scroll }}
  gsettings set org.gnome.desktop.peripherals.mouse natural-scroll {{ .gnome.natural_scroll }}
  gsettings set org.gnome.mutter center-new-windows {{ .gnome.mutter.center_new_windows }}
  gsettings set org.gnome.desktop.wm.keybindings move-to-center "['{{- .gnome.mutter.center_window -}}']"
}

function configure_gnome_dash_to_dock() {
  gsettings set org.gnome.shell.extensions.dash-to-dock autohide {{ .gnome.dash_to_dock.autohide }}
  gsettings set org.gnome.shell.extensions.dash-to-dock dock-position {{ .gnome.dash_to_dock.position  }}
}

function configure_gnome_pop_cosmic() {
  gsettings set org.gnome.shell.extensions.pop-cosmic show-application-menu {{ .gnome.pop_cosmic.show_application_menu }}
  gsettings set org.gnome.shell.extensions.pop-cosmic show-workspaces-button {{ .gnome.pop_cosmic.show_workspaces_button }}
  gsettings set org.gnome.shell.extensions.pop-cosmic workspace-picker-left {{ .gnome.pop_cosmic.workspace_picker_left }}
}

# ****************************************************************************
# *                                 Defaults                                 *
# ****************************************************************************

function set_neovim_as_default_editor() {
  {{ if (and .asdf.enabled .asdf.neovim (eq .prefs.editor "nvim")) }}
  local default="{{ .chezmoi.homeDir }}/.asdf/shims/nvim"
  sudo update-alternatives --install /usr/bin/vi vi "$default" 60
  sudo update-alternatives --install /usr/bin/vim vim "$default" 60
  sudo update-alternatives --install /usr/bin/editor editor "$default" 60
  {{ else }}
  true
  {{ end }}
}

function set_alacritty_as_default_terminal_emulator() {
  {{ if lookPath "alacritty" }}
  sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /usr/bin/alacritty 60
  {{ else }}
  true
  {{ end }}
}

function update_alternatives() {
  set_neovim_as_default_editor
  set_alacritty_as_default_terminal_emulator
}


# ****************************************************************************
# *                                Main Script                               *
# ****************************************************************************

download_dracula_theme
download_dracula_pro_theme
install_gnome_user_themes_extension || true
set_user_theme_to_dracula
configure_static_workspaces {{ .gnome.workspace_count }}
set_logout_confirmation_prompt {{ .gnome.logout_prompt }}
configure_gnome
configure_gnome_dash_to_dock
configure_gnome_pop_cosmic
restart_gnome_shell
enable_gnome_user_themes_extension

rebuild_bat_cache

install_and_configure_tpm
update_alternatives

{{ end }}
