{{- if (and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.name "Pop!_OS")) -}}
#!/bin/sh

sudo apt -y update
sudo apt -y upgrade

sudo apt install -y alacritty \
                    bat \
                    exa \
                    fd-find \
                    gnupg \
                    jq \
                    pcscd \
                    scdaemon \
                    tmux \
                    tree

# set up libsecret for git
LIBSECRET=/usr/share/doc/git/contrib/credential/libsecret
if [ ! -f "$LIBSECRET/git-credential-libsecret" ]; then
  sudo apt install -y libsecret-1-dev
  sudo make --directory=$LIBSECRET
  sudo apt purge -y libsecret-1-dev
fi

# git-delta
curl -s 'https://api.github.com/repos/dandavison/delta/releases/latest' | jq -r ".assets[].browser_download_url" | grep "amd64\.deb$" | grep -v "musl" | xargs curl -s -L --output /tmp/delta.deb && sudo apt install -y /tmp/delta.deb && rm /tmp/delta.deb

# sublime text
{{ if (and (.prefs.sublime_text) (not (lookPath "subl"))) }}
curl -s -L https://download.sublimetext.com/sublimehq-pub.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/sublimehq-archive-keyring.gpg
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/sublimehq-archive-keyring.gpg] https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt -y update
sudo apt -y install sublime-text
{{ end }}

# use neovim unstable and install ripgrep if telescope is used
{{ if .prefs.nvim.telescope }}
sudo add-apt-repository -y ppa:neovim-ppa/unstable
sudo apt -y update
sudo apt install -y ripgrep
{{ end }}

# install neovim
sudo apt install -y neovim

# update alternatives
sudo update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60
sudo update-alternatives --config vi
sudo update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60
sudo update-alternatives --config vim
sudo update-alternatives --install /usr/bin/editor editor /usr/bin/nvim 60
sudo update-alternatives --config editor

# ruby version manager
{{ if .prefs.rvm }}
if [ ! -d "~/.rvm" ]; then
  curl -s -O https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer
  bash rvm-installer --branch stable --ignore-dotfiles
  rm rvm-installer
fi
{{ end }}

# sets keyboard backlight automatically when plugged
# muted distraction-free color choice compatible with dracula pro
{{ if .hardware.logitech_g213 }}
if [ ! -f "/usr/local/bin/g213colors" ]; then
  curl -s -L 'https://gist.githubusercontent.com/krmbzds/1f51e3a4b7779e81651e62e5d15bacdd/raw/f172cf6ba20cd2a7b440fea5ffc9dbc926f74673/g213colors' | sudo tee /usr/local/bin/g213colors
  sudo chmod +x /usr/local/bin/g213colors
  sudo apt install -y python3-usb
  curl -s -L 'https://gist.githubusercontent.com/krmbzds/3ec12198dc5cafe4efcd005122b81b7a/raw/1a9fa16c3ba9557f6812d18c68e40898c1ada339/50-LogitechGamingKeyboardG213.rules' | sudo tee /etc/udev/rules.d/50-LogitechGamingKeyboardG213.rules
fi
{{ end }}

{{ if .gpg.pubkey_url }}
curl -sSL "{{ .gpg.pubkey_url }}" | gpg --import -
{{ end }}

{{ end }}
